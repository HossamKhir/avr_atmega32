
led_batterns.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000178  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  000001cc  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000020  00000000  00000000  000001fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000002b0  00000000  00000000  0000021c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000fa  00000000  00000000  000004cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000001d0  00000000  00000000  000005c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000024  00000000  00000000  00000798  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000001a5  00000000  00000000  000007bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000000a6  00000000  00000000  00000961  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000028  00000000  00000000  00000a07  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 ba 00 	jmp	0x174	; 0x174 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include"MACROS.h"
#include <util/delay.h>
int main(void)
{
	
	DDRC=0Xff ;
  6c:	8f ef       	ldi	r24, 0xFF	; 255
  6e:	84 bb       	out	0x14, r24	; 20
	PORTC=0x00;
  70:	15 ba       	out	0x15, r1	; 21
	
	//PORTC=255 ;
    while(1)
    {
		PORTC=0x00 ;_delay_ms(300) ;	
		for(i=0;i<=7;i++)	{ PORTC=(1<<i) ; _delay_ms(300) ; }
  72:	c0 e0       	ldi	r28, 0x00	; 0
  74:	b0 e0       	ldi	r27, 0x00	; 0
  76:	21 e0       	ldi	r18, 0x01	; 1
  78:	30 e0       	ldi	r19, 0x00	; 0
	 
	 	PORTC=0x00 ;_delay_ms(300) ;
	 for(i=7;i>=0;i--)	{  PORTC=(1<<i) ; _delay_ms(300) ; }
  7a:	a7 e0       	ldi	r26, 0x07	; 7
  7c:	f0 e0       	ldi	r31, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  7e:	78 e0       	ldi	r23, 0x08	; 8
  80:	60 e0       	ldi	r22, 0x00	; 0
		
		PORTC=0 ;_delay_ms(300) ;	 
	   for(i=7;i>=0;i--)	{  PORTC=(PORTC*2)+1 ; _delay_ms(300) ; }
     
	 PORTC=0xff ;_delay_ms(300) ;	 
  82:	ef ef       	ldi	r30, 0xFF	; 255
	int i ;
	
	//PORTC=255 ;
    while(1)
    {
		PORTC=0x00 ;_delay_ms(300) ;	
  84:	15 ba       	out	0x15, r1	; 21
  86:	4f e5       	ldi	r20, 0x5F	; 95
  88:	5a ee       	ldi	r21, 0xEA	; 234
  8a:	80 e0       	ldi	r24, 0x00	; 0
  8c:	41 50       	subi	r20, 0x01	; 1
  8e:	50 40       	sbci	r21, 0x00	; 0
  90:	80 40       	sbci	r24, 0x00	; 0
  92:	e1 f7       	brne	.-8      	; 0x8c <main+0x20>
  94:	00 c0       	rjmp	.+0      	; 0x96 <main+0x2a>
  96:	00 00       	nop
		for(i=0;i<=7;i++)	{ PORTC=(1<<i) ; _delay_ms(300) ; }
  98:	8c 2f       	mov	r24, r28
  9a:	9b 2f       	mov	r25, r27
  9c:	a9 01       	movw	r20, r18
  9e:	08 2e       	mov	r0, r24
  a0:	02 c0       	rjmp	.+4      	; 0xa6 <main+0x3a>
  a2:	44 0f       	add	r20, r20
  a4:	55 1f       	adc	r21, r21
  a6:	0a 94       	dec	r0
  a8:	e2 f7       	brpl	.-8      	; 0xa2 <main+0x36>
  aa:	45 bb       	out	0x15, r20	; 21
  ac:	df e5       	ldi	r29, 0x5F	; 95
  ae:	4a ee       	ldi	r20, 0xEA	; 234
  b0:	50 e0       	ldi	r21, 0x00	; 0
  b2:	d1 50       	subi	r29, 0x01	; 1
  b4:	40 40       	sbci	r20, 0x00	; 0
  b6:	50 40       	sbci	r21, 0x00	; 0
  b8:	e1 f7       	brne	.-8      	; 0xb2 <main+0x46>
  ba:	00 c0       	rjmp	.+0      	; 0xbc <main+0x50>
  bc:	00 00       	nop
  be:	01 96       	adiw	r24, 0x01	; 1
  c0:	88 30       	cpi	r24, 0x08	; 8
  c2:	91 05       	cpc	r25, r1
  c4:	59 f7       	brne	.-42     	; 0x9c <main+0x30>
	 
	 	PORTC=0x00 ;_delay_ms(300) ;
  c6:	15 ba       	out	0x15, r1	; 21
  c8:	8f e5       	ldi	r24, 0x5F	; 95
  ca:	9a ee       	ldi	r25, 0xEA	; 234
  cc:	d0 e0       	ldi	r29, 0x00	; 0
  ce:	81 50       	subi	r24, 0x01	; 1
  d0:	90 40       	sbci	r25, 0x00	; 0
  d2:	d0 40       	sbci	r29, 0x00	; 0
  d4:	e1 f7       	brne	.-8      	; 0xce <main+0x62>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <main+0x6c>
  d8:	00 00       	nop
	 for(i=7;i>=0;i--)	{  PORTC=(1<<i) ; _delay_ms(300) ; }
  da:	8a 2f       	mov	r24, r26
  dc:	9f 2f       	mov	r25, r31
  de:	a9 01       	movw	r20, r18
  e0:	08 2e       	mov	r0, r24
  e2:	02 c0       	rjmp	.+4      	; 0xe8 <main+0x7c>
  e4:	44 0f       	add	r20, r20
  e6:	55 1f       	adc	r21, r21
  e8:	0a 94       	dec	r0
  ea:	e2 f7       	brpl	.-8      	; 0xe4 <main+0x78>
  ec:	45 bb       	out	0x15, r20	; 21
  ee:	4f e5       	ldi	r20, 0x5F	; 95
  f0:	5a ee       	ldi	r21, 0xEA	; 234
  f2:	d0 e0       	ldi	r29, 0x00	; 0
  f4:	41 50       	subi	r20, 0x01	; 1
  f6:	50 40       	sbci	r21, 0x00	; 0
  f8:	d0 40       	sbci	r29, 0x00	; 0
  fa:	e1 f7       	brne	.-8      	; 0xf4 <main+0x88>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <main+0x92>
  fe:	00 00       	nop
 100:	01 97       	sbiw	r24, 0x01	; 1
 102:	68 f7       	brcc	.-38     	; 0xde <main+0x72>
		
		PORTC=0 ;_delay_ms(300) ;	 
 104:	15 ba       	out	0x15, r1	; 21
 106:	5f e5       	ldi	r21, 0x5F	; 95
 108:	8a ee       	ldi	r24, 0xEA	; 234
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	51 50       	subi	r21, 0x01	; 1
 10e:	80 40       	sbci	r24, 0x00	; 0
 110:	90 40       	sbci	r25, 0x00	; 0
 112:	e1 f7       	brne	.-8      	; 0x10c <main+0xa0>
 114:	00 c0       	rjmp	.+0      	; 0x116 <main+0xaa>
 116:	00 00       	nop
 118:	87 2f       	mov	r24, r23
 11a:	96 2f       	mov	r25, r22
	   for(i=7;i>=0;i--)	{  PORTC=(PORTC*2)+1 ; _delay_ms(300) ; }
 11c:	45 b3       	in	r20, 0x15	; 21
 11e:	44 0f       	add	r20, r20
 120:	4f 5f       	subi	r20, 0xFF	; 255
 122:	45 bb       	out	0x15, r20	; 21
 124:	df e5       	ldi	r29, 0x5F	; 95
 126:	4a ee       	ldi	r20, 0xEA	; 234
 128:	50 e0       	ldi	r21, 0x00	; 0
 12a:	d1 50       	subi	r29, 0x01	; 1
 12c:	40 40       	sbci	r20, 0x00	; 0
 12e:	50 40       	sbci	r21, 0x00	; 0
 130:	e1 f7       	brne	.-8      	; 0x12a <main+0xbe>
 132:	00 c0       	rjmp	.+0      	; 0x134 <main+0xc8>
 134:	00 00       	nop
 136:	01 97       	sbiw	r24, 0x01	; 1
 138:	00 97       	sbiw	r24, 0x00	; 0
 13a:	81 f7       	brne	.-32     	; 0x11c <main+0xb0>
     
	 PORTC=0xff ;_delay_ms(300) ;	 
 13c:	e5 bb       	out	0x15, r30	; 21
 13e:	8f e5       	ldi	r24, 0x5F	; 95
 140:	9a ee       	ldi	r25, 0xEA	; 234
 142:	d0 e0       	ldi	r29, 0x00	; 0
 144:	81 50       	subi	r24, 0x01	; 1
 146:	90 40       	sbci	r25, 0x00	; 0
 148:	d0 40       	sbci	r29, 0x00	; 0
 14a:	e1 f7       	brne	.-8      	; 0x144 <main+0xd8>
 14c:	00 c0       	rjmp	.+0      	; 0x14e <main+0xe2>
 14e:	00 00       	nop
 150:	87 2f       	mov	r24, r23
 152:	96 2f       	mov	r25, r22
	     for(i=7;i>=0;i--)	{  PORTC=(PORTC/2) ; _delay_ms(300) ; }
 154:	45 b3       	in	r20, 0x15	; 21
 156:	46 95       	lsr	r20
 158:	45 bb       	out	0x15, r20	; 21
 15a:	4f e5       	ldi	r20, 0x5F	; 95
 15c:	5a ee       	ldi	r21, 0xEA	; 234
 15e:	d0 e0       	ldi	r29, 0x00	; 0
 160:	41 50       	subi	r20, 0x01	; 1
 162:	50 40       	sbci	r21, 0x00	; 0
 164:	d0 40       	sbci	r29, 0x00	; 0
 166:	e1 f7       	brne	.-8      	; 0x160 <main+0xf4>
 168:	00 c0       	rjmp	.+0      	; 0x16a <main+0xfe>
 16a:	00 00       	nop
 16c:	01 97       	sbiw	r24, 0x01	; 1
 16e:	00 97       	sbiw	r24, 0x00	; 0
 170:	89 f7       	brne	.-30     	; 0x154 <main+0xe8>
 172:	88 cf       	rjmp	.-240    	; 0x84 <main+0x18>

00000174 <_exit>:
 174:	f8 94       	cli

00000176 <__stop_program>:
 176:	ff cf       	rjmp	.-2      	; 0x176 <__stop_program>
